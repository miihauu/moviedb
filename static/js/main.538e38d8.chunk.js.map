{"version":3,"sources":["config.js","components/SearchBar.js","components/Navbar.js","components/Header.js","components/MovieDetails.js","components/Movie.js","components/App.js","index.js"],"names":["config","apiKey","SearchBar","state","value","videos","videoTitle","getResult","_callee","movie","response","regenerator_default","a","wrap","_context","prev","next","axios","get","params","api_key","language","query","sent","_this","setState","data","results","stop","onSubmit","e","preventDefault","props","history","push","concat","videoId","onChange","target","onSelect","item","id","renderItem","isHighLighted","react_default","createElement","className","style","background","key","title","src","poster_path","getItemValue","original_title","this","Autocomplete_default","inputProps","border","width","borderBottom","transition","fontSize","color","outline","items","placeholder","React","Component","withRouter","Navbar","Header","components_Navbar","components_SearchBar","MovieDetails","_ref","details","release_date","runtime","vote_average","overview","backgroundImage","Movie","movieId","match","isLoaded","getDetails","components_MovieDetails","react_loader_spinner_default","type","height","renderMovie","App","BrowserRouter","Route","path","exact","component","ReactDOM","render","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.538e38d8.chunk.js","sourcesContent":["export const config = {\r\n    apiKey: '967ff21532a63288ecbd1985d2fa04be'\r\n}","import React from 'react';\r\nimport '../css/App.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AutoComplete from 'react-autocomplete';\r\nimport { config } from '../config';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n    state = {\r\n        value: '',\r\n        videos: [],\r\n        videoTitle: ''\r\n    };\r\n\r\n    getResult = async movie => {\r\n        const response = await axios.get(`https://api.themoviedb.org/3/search/movie/`, {\r\n            params: {\r\n                api_key: config.apiKey,\r\n                language: 'en-US',\r\n                query: movie\r\n                \r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            videos: response.data.results,\r\n\r\n        })\r\n    } \r\n\r\n \r\n\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.history.push(`/movie/${this.state.videoId}`) \r\n    };\r\n    \r\n    onChange = e => {\r\n        this.setState({\r\n            value: e.target.value\r\n        })\r\n\r\n        this.getResult(e.target.value)\r\n    };\r\n\r\n    onSelect = (e, item) => {\r\n        this.setState({\r\n            value: e,\r\n            videoId: item.id     \r\n        })\r\n        \r\n    }\r\n\r\n    renderItem = (item, isHighLighted) => {\r\n         return (\r\n            <div className=\"autocomplete\" style={{background: isHighLighted ? 'lightgray' : 'white'}} key={item.id}>\r\n                <div>{item.title}</div>\r\n                <div><img src={`https://image.tmdb.org/t/p/w500/${item.poster_path}`}/></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getItemValue = item => {\r\n        return (\r\n            `${item.original_title}`\r\n        )\r\n  \r\n    }\r\n\r\n\r\n        \r\n\r\n    render() {\r\n        return ( \r\n            <div className=\"main-container__searchBar\">\r\n                    <form  onSubmit={this.onSubmit}>\r\n                        <AutoComplete \r\n                            inputProps={{ \r\n                                style: { \r\n                                    border: 'none',\r\n                                    background: 'transparent',\r\n                                    width: '200px',\r\n                                    borderBottom: '2px solid rgba(255, 255, 255, 0.3)',\r\n                                    transition: 'width 0.5s',\r\n                                    fontSize: '25px',\r\n                                    color: 'rgba(255, 255, 255, 0.651)', \r\n                                    outline: 'none'\r\n                                     }\r\n                            }}\r\n                            getItemValue={this.getItemValue}\r\n                            items={this.state.videos}\r\n                            renderItem={this.renderItem}\r\n                            value={this.state.value}\r\n                            onChange={this.onChange}\r\n                            onSelect={this.onSelect}  \r\n                            placeholder=\"Search Movie...\"\r\n                        />\r\n                    </form>\r\n            </div>\r\n         );\r\n\r\n    }\r\n}\r\n \r\nexport default withRouter(SearchBar);\r\n\r\n\r\n//                        <input onChange={this.onChange} className=\"main-container__input\" type=\"search\" placeholder=\"Search Movie...\"/>\r\n","import React from 'react';\r\nimport '../css/App.css';\r\n\r\nconst Navbar = () => {\r\n    return ( \r\n        <div className=\"navbar navbar-expand-lg sticky-top\">\r\n            <div className=\"navbar__logo\">\r\n                MovieApp\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Navbar;\r\n","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport Navbar from './Navbar';\r\n\r\nclass Header extends React.Component {\r\n  \r\n\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"main-container\">\r\n                <Navbar/>\r\n                <div className=\"main-container__header\">\r\n                    <div>\r\n                        <h1>Find your movie!</h1> \r\n                    </div>\r\n                    <div>\r\n                        <SearchBar />      \r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\nimport '../css/Movie.css';\r\n\r\n\r\n\r\nconst MovieDetails = ({ details }) => {\r\n    const { original_title, release_date, runtime, vote_average, overview, poster_path } = details;\r\n    return ( \r\n        <div className=\"movie-container\" style={{ backgroundImage: `url(https://image.tmdb.org/t/p/original/${poster_path})` }}> \r\n    \r\n                <div className=\"movie-element\">\r\n                        <div className=\"movie__poster\">\r\n                            <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`}/>\r\n                        </div>\r\n                        <div className=\"movie-element__content\">\r\n                            <div className=\"movie__title\"> \r\n                                <h2 >{original_title}</h2>  \r\n                            </div>\r\n                            <div className=\"movie__description\">\r\n                                <h4>DESCRIPTION</h4>\r\n                                <p>{overview}</p> \r\n                            </div>\r\n                            <div className=\"movie__info\">\r\n                                <div><h4>INFO</h4></div>\r\n                                <div className=\"movie__info-properties\">\r\n                                    <div><p>Release Time:</p><p>{release_date}</p></div>\r\n                                    <div><p>Running Time:</p><p>{`${runtime} min`}</p></div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"movie__Avg\">\r\n                                <div>\r\n                                    <h4>VOTE AVERAGE</h4>\r\n                                    <p>{`${vote_average}/10`}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                </div>\r\n    \r\n            </div>\r\n     );\r\n}\r\n \r\nexport default MovieDetails;","import React from 'react';\r\nimport '../css/Movie.css';\r\nimport { config } from '../config';\r\nimport axios from 'axios';\r\nimport MovieDetails from './MovieDetails';\r\nimport Loader from 'react-loader-spinner'\r\n\r\n\r\nclass Movie extends React.Component {\r\n    state = {\r\n        movieId: this.props.match.params.id,\r\n        details: {},\r\n        isLoaded: false\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        this.getDetails(this.state.movieId)\r\n\r\n    }\r\n    \r\n    getDetails = async movieId => {\r\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}`, {\r\n            params: {\r\n                api_key: config.apiKey,\r\n                language: 'en-US',\r\n                \r\n                \r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            details: response.data,\r\n            isLoaded: true\r\n        })\r\n    } \r\n\r\n    renderMovie() {\r\n        if (this.state.isLoaded) {\r\n            return <MovieDetails details={this.state.details} />\r\n        } else {\r\n            return (\r\n                <div className=\"movie__loader\">\r\n                    <div>\r\n                        <Loader \r\n                        type=\"Puff\" \r\n                        color=\"rgb(38, 90, 235)\" \r\n                        height={80} \r\n                        width={80} />\r\n                    </div>\r\n                    <p>Loading</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n\r\n    render() {\r\n        \r\n        return ( \r\n            <div>\r\n                {this.renderMovie()}\r\n            </div>\r\n         );\r\n\r\n    }\r\n}\r\n \r\nexport default Movie;","import React from 'react';\r\nimport Header from './Header';\r\nimport Movie from './Movie';\r\nimport { BrowserRouter, Route} from 'react-router-dom'\r\n\r\nimport '../css/App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <BrowserRouter>\r\n                    <div>\r\n                        <Route path=\"/\" exact component={Header}/>\r\n                        <Route path=\"/movie/:id\" exact component={Movie}/>\r\n                    </div>\r\n                </BrowserRouter>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.querySelector('#root')  \r\n);\r\n\r\n"],"sourceRoot":""}